Тестовый проект для исследования Git


1. Создать репозиторий
2. Выполнить команды git log, git status, посмотреть результат
3. Поместить все файлы в индекс git add -A, посмотреть результат git status
3. Сделать коммит всего что есть git commit -a -m 'initial'

----------------------------
Переключение между коммитами
----------------------------
1. Убедиться, что находитесь на ветке master
2. Добавить контроллер User с пустым методом void GetAll(). Сделать коммит 'контроллер User'
3. В контроллер User добавить пустой метод void Create().  Сделать коммит 'добавлен метод Create в UserController'
4. Выполнить команды git log, git status, проанализировать результат
5. Переключится на коммит 'добавлен метод GetAll'. Убедиться, что в контроллере только метод GetAll
6. Переключиться на последний коммит. Убедиться, что в контроллере методы GetAll, Create
7. Имитация поломки. В Create() убрать закрывающую скобку, как будто забыть скомпилировать проект,
сделать коммит
8. Скомпилировать проект, убедиться что не компилируется. 
    Представить, что не понятно из-за чего (на самом деле понятно, что нет закрывающей скобки)
9. Перейти на предпоследний коммит. Скомпилировать проект. Убедиться что компилируется и есть закрывающая скобка
10. Редактировать комментарий к последнему коммиту - добавить "Поломка - нет закрывающей скобки у Create"
11. Удалить последний коммит как ненужный. Сейчас в master 2 коммита
     
----------
.gitignore
----------
1. Просмотреть файлы в индексе. Если там есть .dll файлы - исключить их
2. Создать файл .gitignore. прописать, чтобы в индекс не попадали .dll
перекомпилировать проект. Убедиться, что в индексе нет .dll. Сделать коммит
3. Переключиться на предыдущий коммит. Убедиться, что в индексе есть .dll (git status)
4. Переключиться на последний коммит. Убедиться, что в индексе нет .dll (git status)

-----
Ветки
-----
1. Создать ветку auth - для функционала аутентификации. Перейти на неё. Убедиться, что нет никаких файлов(?)
2. Создать в проекте контроллер Auth c пустым методом void Login()
    Сделать коммит. 
3. Перейти на ветку master. Убедиться, что в проекте нет контроллера Auth
4. Перейти на ветку auth. Убедиться, что в проекте есть контроллер Auth
5. Добавить в Auth метод void Logout(), сделать коммит
6. Посмотреть как ввыглядит дерево коммитов через git log c разными параметрами (и псевдографическом)
7. Перейти на master. Смёрджить master с auth. Убедиться, что в проекте появился контроллер Auth
8. Посмотреть как ввыглядит дерево коммитов через git log c разными параметрами (и псевдографическом)




------------ Команды --------------
переключиться(откатиться) на коммит
посмотреть на каком мы коммите (текущий коммит)
посмотреть список коммитов
удалить ветку (если неудачная)
Объединение коммитов

убрать файл из индекса git reset HEAD <file>

удалить файл из индекса 
git rm --cached .vs/config/applicationhost.config
если пробелы в пути, то в кавычки

удалить все файлы из индекса
git reset HEAD --

убрать файл из индекса
git reset HEAD <file>


git status
"changes to be commited"



-------------- Как работает Git ----------------
когда изменяешь файл, его каждый раз надо добавлять в индекс,
даже если он уже туда попадал


------- Вопросы ----------
Посмотреть инфо о каком-либо коммите
Как удалить коммит
Имитация удаления коммитов - это смёрживание в 1? 
